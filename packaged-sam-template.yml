AWSTemplateFormatVersion: '2010-09-09'
Resources:
  ImageAnalysis:
    Properties:
      CodeUri: s3://stine-lambda-staging/757b4ed8565563579396c0a1002be447
      Handler: index.handler
      MemorySize: 256
      Policies:
      - AmazonRekognitionFullAccess
      - CloudWatchLogsFullAccess
      Runtime: nodejs6.10
      Timeout: 30
    Type: AWS::Serverless::Function
  ImageApi:
    Properties:
      CodeUri: s3://stine-lambda-staging/903480d089cec66ae33055051f6b10f7
      Environment:
        Variables:
          TABLE_NAME:
            Ref: ImageDb
      Events:
        GetImage:
          Properties:
            Method: get
            Path: /images/{id}
          Type: Api
        ListAll:
          Properties:
            Method: get
            Path: /images
          Type: Api
      Handler: index.handler
      Policies:
      - AmazonDynamoDBReadOnlyAccess
      - CloudWatchLogsFullAccess
      Runtime: nodejs6.10
    Type: AWS::Serverless::Function
  ImageDb:
    Properties:
      PrimaryKey:
        Name: Id
        Type: String
    Type: AWS::Serverless::SimpleTable
  ImageDbUpdate:
    Properties:
      CodeUri: s3://stine-lambda-staging/027205d99bc960ea9ec6aba1ce69d383
      Environment:
        Variables:
          TABLE_NAME:
            Ref: ImageDb
      Handler: index.handler
      Policies:
      - AmazonDynamoDBFullAccess
      - CloudWatchLogsFullAccess
      Runtime: nodejs6.10
    Type: AWS::Serverless::Function
  ImagePipelineStateMachine:
    Properties:
      DefinitionString:
        Fn::Sub:
        - "{\n  \"Comment\": \"An example of the Amazon States Language using a parallel\
          \ state to execute two branches at the same time.\",\n  \"StartAt\": \"\
          Parallel\",\n  \"States\": {\n    \"Parallel\": {\n      \"Type\": \"Parallel\"\
          ,\n      \"Next\": \"DB Update\",\n      \"Branches\": [\n        {\n  \
          \        \"StartAt\": \"Resize\",\n          \"States\": {\n           \
          \ \"Resize\": {\n              \"Type\": \"Task\",\n              \"Resource\"\
          : \"${imageResizeArn}\",\n              \"End\": true\n            }\n \
          \         }\n        },\n        {\n          \"StartAt\": \"Analyze\",\n\
          \          \"States\": {\n            \"Analyze\": {\n              \"Type\"\
          : \"Task\",\n              \"Resource\": \"${imageAnalyzeArn}\",\n     \
          \         \"End\": true\n            }\n          }\n        }\n      ]\n\
          \    },\n    \"DB Update\": {\n      \"Type\": \"Task\",\n      \"Resource\"\
          : \"${dbUpdateArn}\",\n      \"Next\": \"Final State\"\n    },\n    \"Final\
          \ State\": {\n      \"Type\": \"Pass\",\n      \"End\": true\n    }\n  }\n\
          }"
        - dbUpdateArn:
            Fn::GetAtt:
            - ImageDbUpdate
            - Arn
          imageAnalyzeArn:
            Fn::GetAtt:
            - ImageAnalysis
            - Arn
          imageResizeArn:
            Fn::GetAtt:
            - ImageResize
            - Arn
      RoleArn:
        Fn::GetAtt:
        - StatesExecutionRole
        - Arn
    Type: AWS::StepFunctions::StateMachine
  ImagePipelineTrigger:
    Properties:
      CodeUri: s3://stine-lambda-staging/ff02cee21381324567bd1c4405dfc397
      Environment:
        Variables:
          STATE_MACHINE_ARN:
            Ref: ImagePipelineStateMachine
      Events:
        NewImage:
          Properties:
            Bucket:
              Ref: StineLambdaImages
            Events: s3:ObjectCreated:*
          Type: S3
      Handler: index.handler
      Policies:
      - AWSStepFunctionsFullAccess
      - CloudWatchLogsFullAccess
      Runtime: nodejs6.10
    Type: AWS::Serverless::Function
  ImageResize:
    Properties:
      CodeUri: s3://stine-lambda-staging/d9bfc5ac033eae03478e9084814941bd
      Environment:
        Variables:
          THUMBNAIL_BUCKET:
            Ref: StineLambdaThumbnails
      Handler: index.handler
      MemorySize: 256
      Policies:
      - AmazonS3FullAccess
      - CloudWatchLogsFullAccess
      Runtime: nodejs6.10
      Timeout: 30
    Type: AWS::Serverless::Function
  StatesExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - Fn::Sub: states.${AWS::Region}.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - lambda:InvokeFunction
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: StatesExecutionPolicy
    Type: AWS::IAM::Role
  StineLambdaImages:
    Type: AWS::S3::Bucket
  StineLambdaThumbnails:
    Type: AWS::S3::Bucket
Transform: AWS::Serverless-2016-10-31
